# SELECT U.USER_ID, U.NICKNAME, CONCAT(U.CITY, ' ', U.STREET_ADDRESS1, U.STREET_ADDRESS2) AS 전체주소, CONCAT(SUBSTRING(U.TLNO, 1,3), '-', SUBSTRING(U.TLNO, 4, 4), '-', SUBSTRING(U.TLNO, 8, 4)) AS 전화번호
# FROM USED_GOODS_BOARD B JOIN USED_GOODS_USER U ON B.WRITER_ID = U.USER_ID
# GROUP BY B.WRITER_ID
# HAVING COUNT(B.WRITER_ID) >=3
# ORDER BY 1 DESC;

# GROUP BY 한 후 집계함수를 사용하지 않고 SELECT에 값 넣으면 진행되기 어렵다 그래서 ANY_VALUE 함수 써서 진행
-- SELECT 
--     U.USER_ID, 
--     ANY_VALUE(U.NICKNAME) AS NICKNAME, 
--     CONCAT(ANY_VALUE(U.CITY), ' ', 
--            ANY_VALUE(U.STREET_ADDRESS1), ' ', 
--            ANY_VALUE(U.STREET_ADDRESS2)) AS 전체주소, 
--     CONCAT(SUBSTRING(ANY_VALUE(U.TLNO), 1,3), '-', 
--            SUBSTRING(ANY_VALUE(U.TLNO), 4, 4), '-', 
--            SUBSTRING(ANY_VALUE(U.TLNO), 8, 4)) AS 전화번호
-- FROM USED_GOODS_BOARD B 
-- JOIN USED_GOODS_USER U ON B.WRITER_ID = U.USER_ID
-- GROUP BY B.WRITER_ID
-- HAVING COUNT(B.WRITER_ID) >= 3
-- ORDER BY U.USER_ID DESC;

# GROUP BY 를 U 테이블에서 진행하고 U테이블에서의 값을 가지고 온다.     
SELECT 
    U.USER_ID, 
    U.NICKNAME, 
    CONCAT(U.CITY, ' ', U.STREET_ADDRESS1, ' ', U.STREET_ADDRESS2) AS 전체주소, 
    CONCAT(SUBSTRING(U.TLNO, 1,3), '-', 
           SUBSTRING(U.TLNO, 4, 4), '-', 
           SUBSTRING(U.TLNO, 8, 4)) AS 전화번호
FROM USED_GOODS_BOARD B 
JOIN USED_GOODS_USER U ON B.WRITER_ID = U.USER_ID
GROUP BY U.USER_ID
HAVING COUNT(B.WRITER_ID) >= 3
ORDER BY U.USER_ID DESC;
