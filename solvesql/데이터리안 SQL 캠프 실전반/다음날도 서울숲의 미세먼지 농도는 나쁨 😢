SELECT A.measured_at AS today, B.measured_at AS next_day, A.pm10 pm10, B.pm10 next_pm10
FROM measurements A LEFT JOIN measurements B ON DATE(A.measured_at, '+1 day') = B.measured_at
WHERE A.pm10 < B.pm10;

'''
sqlirte에는 date_add 함수가 없어서
date 함수를 써야 하고
형태가 %Y-%m-%d 이니까 그냥 +1 day 형태로 더해서 맞춰야 할거 같다.
'''

'''
A.measured_at	B.measured_at	A.pm10	B.pm10
2022-01-01 10:00:00	2022-01-02 10:00:00	35	40
2022-01-02 10:00:00	2022-01-03 10:00:00	40	38
2022-01-03 10:00:00	2022-01-04 10:00:00	38	45
2022-01-04 10:00:00	2022-01-05 10:00:00	45	42

이런 식으로 붙는다.
즉 다음 날의 수치를 원래 레코드에 붙이는 형태

SQLite DATE 함수에 대해 자세히 알아보자
1. 일반적인 날짜 변형
DATE('2022-01-01 14:30:00')  -- '2022-01-01'
DATE('2022-01-01T14:30:00Z')  -- '2022-01-01'
DATE('20220101')  -- '2022-01-01'

2. 특정 날짜 빼기
DATE('2022-01-01', '+1 day')  -- '2022-01-02'
DATE('2022-01-01', '-1 day')  -- '2021-12-31'
DATE('2022-01-01', '+1 month')  -- '2022-02-01'
DATE('2022-01-01', '+1 year')  -- '2023-01-01'
DATE('2022-01-01', '-1 year')  -- '2021-01-01'

3. 'now' 활용
DATE('now', '+7 day')  -- 7일 후
DATE('now', '-1 month')  -- 1개월 전
DATE('now', '+1 year', '-1 day')  -- 내년의 하루 전

4. JULIANDAY() 함수를 활용해서 두 날짜간 일수 차이 구하기
SELECT JULIANDAY('2022-02-01') - JULIANDAY('2022-01-01'); 
-- 결과: 31 (두 날짜 간의 차이)

5. STRFTIME() 함수를 활용해서 요일 혹은 원하는 형태로 출력
SELECT STRFTIME('%w', '2022-01-01'); 
-- 결과: '6' (토요일, 0=일요일, 1=월요일, ..., 6=토요일)

SELECT STRFTIME('%Y-%m-%d %H:%M:%S', 'now');  
-- 현재 날짜와 시간을 'YYYY-MM-DD HH:MM:SS' 형식으로 출력
'''
